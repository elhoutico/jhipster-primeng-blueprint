<%#
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
<div>
    <h2 id="page-heading">
        <span jhiTranslate="<%= i18nKeyPrefix %>.home.title"><%= entityClassPluralHumanized %></span>
        <%_ if (!readOnly) { _%>
        <p-button id="jh-create-entity" class="float-right jh-create-entity create-<%= entityUrl %>" [routerLink]="['/<%= entityUrl %>/new']"
                  [label]="'<%= i18nKeyPrefix %>.home.createLabel' | translate" icon="pi pi-plus" iconPos="left">
        </p-button>
        <%_ } _%>
    </h2>
    <!-- <%_ if (searchEngine === 'elasticsearch') { _%>
    <div class="row">
        <div class="col-sm-12">
            <form name="searchForm" class="form-inline">
                <div class="input-group w-100 mt-3">
                    <input type="text" class="form-control" [(ngModel)]="currentSearch" id="currentSearch" name="currentSearch" placeholder="<% if (enableTranslation) { %>{{ '<%= i18nKeyPrefix %>.home.search' | translate }}<% } else { %>Query<% } %>">
                    <button pButton (click)="search(currentSearch)" icon="pi pi-search">
                    </button>
                    <button pButton class="ui-button-danger" (click)="search('')" *ngIf="currentSearch" icon="pi pi-trash">
                    </button>
                </div>
            </form>
        </div>
    </div>
    <%_ } _%> -->
    <br/>
    <p-table #<%= entityInstance %>Table [value]="<%= entityInstancePlural %>" [rowTrackBy]="trackId" [responsive]="true"<%
    if (pagination !== 'no') {
        %> [lazy]="true" [rows]="itemsPerPage" [totalRecords]="totalItems" [loading]="loading" sortMode="multiple" [lazyLoadOnInit]="false"<%
        if (pagination === 'infinite-scroll') {
            %> [scrollable]="true" [virtualScroll]="true" (onLazyLoad)="onLazyLoadEvent($event)" scrollHeight="200px" [virtualRowHeight]="34" <%
        } else if (pagination === 'pagination') {
            %> [paginator]="true" (onLazyLoad)="onLazyLoadEvent($event)" <%
        }
    }
    %>>
        <%_ if (searchEngine === 'elasticsearch') { _%>
        <ng-template pTemplate="caption">
            <div style="text-align: right">
                <i class="pi pi-search" style="margin:4px 4px 0 0"></i>
                <input pInputText type="text" placeholder="Global Filter" [ngModel]="<%= entityInstance %>Table.filters.global?.value"
                       (ngModelChange)="filter($event, 'global')" style="width:auto">
            </div>
        </ng-template>
        <%_ } _%>
        <ng-template pTemplate="header">
            <tr>
                <%_ for (idx in fields) { _%>
                <th<% if (pagination !== 'no') { %> pSortableColumn="<%= fields[idx].fieldName %>"<% } %>>
                    <span jhiTranslate="<%=`${i18nKeyPrefix}.${fields[idx].fieldName}` %>"><%= fields[idx].fieldNameHumanized %></span>
                    <%_ if (pagination !== 'no') { _%>
                    <p-sortIcon field="<%= fields[idx].fieldName %>"></p-sortIcon>
                    <%_ } _%>
                </th>
                <%_ } _%>
                <%_ for (idx in relationships) { _%>
                    <%_ if (relationships[idx].inList) { _%>
                        <%_ relationships[idx].pkData.forEach(pk => { _%>
                <th<% if (pagination !== 'no') { %> pSortableColumn="<%= pk.formName %>"<% } %>>
                    <span jhiTranslate="<%= `${i18nKeyPrefix}.${pk.formName}` %>"><%= _.startCase(pk.formName) %></span>
                    <% if (pagination !== 'no') { %><p-sortIcon field="<%= pk.formName %>"></p-sortIcon><% } %>
                </th>
                        <%_ }) _%>
                    <%_ } _%>
                <%_ } _%>
                <th style="width: 124px"></th>
            </tr>
            <%_ if (jpaMetamodelFiltering) { _%>
            <tr>
                <%_ for (idx in fields) {
                    const fieldType = fields[idx].fieldType;_%>
                <th>
                    <%_ if (['byte[]', 'ByteBuffer'].includes(fieldType)) { _%>
                    <%_ } else if (fieldType === 'Boolean') { _%>
                    <p-triStateCheckbox [ngModel]="<%= entityInstance %>Table.filters.billable?.value"
                                        (ngModelChange)="filter($event, '<%= fields[idx].fieldName %>')"></p-triStateCheckbox>
                    <%_ } else if (fields[idx].fieldIsEnum) { _%>
                    <p-multiSelect [options]="<%= fields[idx].fieldName %>Options" [ngModel]="<%= entityInstance %>Table.filters.<%= fields[idx].fieldName %>?.value"
                                   (ngModelChange)="filter($event, '<%= fields[idx].fieldName %>')">
                        <ng-template let-<%= fields[idx].fieldName %> pTemplate="item">{{'<%= `${angularAppName}.${fields[idx].fieldType}` %>.' + <%= fields[idx].fieldName %>.label | translate}}</ng-template>
                    </p-multiSelect>
                    <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                        <%_ if (pagination !== 'no') { _%>
                    <p-calendar [(ngModel)]="<%= fields[idx].fieldName %>Range" selectionMode="range" [readonlyInput]="true" [showButtonBar]="true" showTime="true" hourFormat="24"
                                (onSelect)="onDateSelect(<%= fields[idx].fieldName %>Range, '<%= fields[idx].fieldName %>', true)" (onClearClick)="onDateSelect(<%= fields[idx].fieldName %>Range, '<%= fields[idx].fieldName %>', true)"></p-calendar>
                        <%_ } _%>
                    <%_ } else if (fieldType === 'LocalDate') { _%>
                        <%_ if (pagination !== 'no') { _%>
                    <p-calendar [(ngModel)]="<%= fields[idx].fieldName %>Range" selectionMode="range" [readonlyInput]="true" [showButtonBar]="true"
                                (onSelect)="onDateSelect(<%= fields[idx].fieldName %>Range, '<%= fields[idx].fieldName %>')" (onClearClick)="onDateSelect(<%= fields[idx].fieldName %>Range, '<%= fields[idx].fieldName %>')"></p-calendar>
                        <%_ } _%>
                    <%_ } else if (['Integer', 'Long', 'Float', 'Double', 'BigDecimal', 'Duration'].includes(fieldType)) { _%>
                    <input pInputText type="number" [ngModel]="<%= entityInstance %>Table.filters.<%= fields[idx].fieldName %>?.value"
                           (ngModelChange)="filter($event, '<%= fields[idx].fieldName %>')">
                    <%_ } else { _%>
                    <input pInputText type="text" [ngModel]="<%= entityInstance %>Table.filters.<%= fields[idx].fieldName %>?.value"
                           (ngModelChange)="filter($event, '<%= fields[idx].fieldName %>')">
                    <%_ } _%>
                </th>
                <%_ } _%>
                <%_ for (idx in relationships) { _%>
                    <%_ if (relationships[idx].inList) { _%>
                        <%_ relationships[idx].pkData.forEach(pk => { _%>
                <th>
                    <p-multiSelect [options]="<%= pk.formName %>Options" [ngModel]="<%= entityInstance %>Table.filters.<%= relationships[idx].relationshipName + pk.nameCapitalized %>?.value" optionLabel="<%= pk.otherEntityField %>" optionValue="<%= pk.field.fieldName %>"<% if(relationships[idx].pagination !== 'no') { %>
                                   [lazy]="true" [rows]="10" (onLazyLoad)="on<%= _.upperFirst(pk.formName) %>LazyLoadEvent($event)"<% } %>
                                   (ngModelChange)="filter($event, '<%= relationships[idx].relationshipName + pk.nameCapitalized %>')"></p-multiSelect>
                </th>
                        <%_ }) _%>
                    <%_ } _%>
                <%_ } _%>
                <th></th>
            </tr>
        <%_ } _%>
        </ng-template>
        <ng-template pTemplate="body" let-<%=entityInstance %>>
            <tr>
                <%_ for (idx in fields) {
                const fieldName = fields[idx].fieldName;
                const fieldType = fields[idx].fieldType;
                const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent; _%>
                <%_ if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
                <td>
                    <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                        <img [src]="'data:' + <%=entityInstance %>.<%=fieldName%>ContentType + ';base64,' + <%=entityInstance %>.<%=fieldName%>" style="max-height: 30px;" alt="<%=entityInstance %> image"/>
                    </a>
                    <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}</span>
                </td>
                <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
                <td>
                    <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)" jhiTranslate="entity.action.open">open</a>
                    <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}</span>
                </td>
                <%_ } else if (fields[idx].fieldIsEnum) { _%>
                <td jhiTranslate="{{'<%= angularAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %>}}">{{<%= entityInstance %>.<%= fieldName %>}}</td>
                <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                <td>{{<%=entityInstance %>.<%=fieldName%> | date:'medium'}}</td>
                <%_ } else if (fieldType === 'LocalDate') { _%>
                <td>{{<%=entityInstance %>.<%=fieldName%> | date:'mediumDate'}}</td>
                <%_ } else { _%>
                <td>{{<%=entityInstance %>.<%=fieldName%>}}</td>
                <%_ } _%>
                <%_ } _%>
                <%_ for (idx in relationships) {
                const relationshipType = relationships[idx].relationshipType;
                const ownerSide = relationships[idx].ownerSide;
                const relationshipFieldName = relationships[idx].relationshipFieldName;
                const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
                const otherEntityName = relationships[idx].otherEntityName;
                const otherEntityStateName = relationships[idx].otherEntityStateName;
                const otherEntityField = relationships[idx].otherEntityField;
                const otherEntityFieldCapitalized = relationships[idx].otherEntityFieldCapitalized; _%>
                <%_ if (relationships[idx].inList) { _%>
                    <%_ if (otherEntityName === 'user') { _%>
                        <%_ if (relationshipType === 'many-to-many') { _%>
                <td>
                    <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                        {{<%= relationshipFieldName %>.<%= otherEntityField %>}}{{last ? '' : ', '}}
                    </span>
                </td>
                        <%_ } else { _%>
                            <%_ if (dto === 'no') { _%>
                    {{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}
                            <%_ } else { _%>
                    {{<%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %>}}
                            <%_ } _%>
                        <%_ } _%>
                    <%_ } else { _%>
                        <%_ if (relationshipType === 'many-to-many') { _%>
                <td>
                    <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                        <a class="form-control-static" [routerLink]="['/<%= otherEntityStateName %>', <%= relationshipFieldName %>?.id, 'view' ]">{{<%= relationshipFieldName %>.<%= otherEntityField %>}}</a>{{last ? '' : ', '}}
                    </span>
                </td>
                        <%_ } else { _%>
                            <%_ if (dto === 'no') { _%>
                <td>
                    <div *ngIf="<%= entityInstance + "." + relationshipFieldName %>">
                        <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + "?.id" %>, 'view' ]" >{{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}</a>
                    </div>
                </td>
                            <%_ } else { _%>
                                <%_ relationships[idx].pkData.forEach(pk => { _%>
                <td>
                    <div *ngIf="<%= entityInstance + "." + relationshipFieldName + pk.nameCapitalized %>">
                        <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + pk.nameCapitalized %> %>, 'view' ]" >{{<%= entityInstance + "." + pk.formName + _.upperFirst(pk.otherEntityField) %>}}</a>
                    </div>
                </td>
                                <%_ }) _%>
                            <%_ } _%>
                        <%_ } _%>
                    <%_ } _%>
                <%_ } _%>
                <%_ } _%>
                <td>
                    <div class="btn-group flex-btn-group-container">
<%_ const idParam = pkData.length === 1 ? `${entityInstance}.${pkName}` : '{ '+ pkData.map(pk => `${pk.name}: ${entityInstance}.${pk.name}`).join(', ') + ' }' _%>
                        <p-button type="submit" [routerLink]="['/<%= entityUrl %>', <%- idParam %>, 'view' ]"
                                  icon="pi pi-eye" styleClass="ui-button-info">
                        </p-button>
                        <%_ if (!readOnly) { _%>
                        <p-button type="submit" [routerLink]="['/<%= entityUrl %>', <%- idParam %>, 'edit' ]"
                                  icon="pi pi-pencil" styleClass="ui-button-warning">
                        </p-button>
                        <p-button type="submit" (click)="delete(<%- pkData.map(pk => `${entityInstance}.${pk.name}`).join(', ') %>)"
                                  icon="pi pi-times" styleClass="ui-button-danger">
                        </p-button>
                        <%_ } _%>
                    </div>
                </td>
            </tr>
        </ng-template>
    </p-table>
</div>
